name: CI/CD

on:
  push:
    branches: [ main ]
    paths:
      - 'src/**'
      - 'package.json'
      - '.github/workflows/ci-cd.yml'
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: Test and Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Run tests
        run: npm test
      
      - name: Run build
        run: npm run build
      
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/
          if-no-files-found: error

  publish:
    name: Publish to npm
    needs: test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: 'https://registry.npmjs.org'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist/
      
      - name: Check version changes
        id: check
        run: |
          CURRENT_VERSION=$(node -p "require('./package.json').version")
          git fetch origin
          
          # Check if package.json version changed compared to previous commit
          PREVIOUS_VERSION=$(git show origin/main:package.json | grep '"version"' | cut -d'"' -f4)
          
          if [ "$CURRENT_VERSION" != "$PREVIOUS_VERSION" ]; then
            echo "Version changed from $PREVIOUS_VERSION to $CURRENT_VERSION"
            echo "version_changed=true" >> $GITHUB_OUTPUT
          else
            echo "No version change detected, checking for source changes"
            
            # If no version change but src files changed, bump patch version
            if git diff --name-only HEAD~1 HEAD | grep -q "^src/"; then
              echo "Source code changes detected, bumping patch version"
              npm version patch -m "chore: bump version to %s [skip ci]"
              BUMPED_VERSION=$(node -p "require('./package.json').version")
              echo "Bumped version to $BUMPED_VERSION"
              echo "version_changed=true" >> $GITHUB_OUTPUT
            else
              echo "No significant changes requiring a version bump"
              echo "version_changed=false" >> $GITHUB_OUTPUT
            fi
          fi
      
      - name: Publish to npm
        if: steps.check.outputs.version_changed == 'true'
        run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      
      - name: Push version changes
        if: steps.check.outputs.version_changed == 'true'
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git push origin main 